{"ast":null,"code":"import toPairs from 'lodash/toPairs';\nconst COMPANY_ROOT = 'https://localhost:8080';\n\nconst parseJSON = response => {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n\n  return response.json();\n};\n\nconst checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nexport const request = (url, options) => {\n  console.log(\"request\", url);\n  return fetch(url, options).then(checkStatus).then(parseJSON);\n};\n\nconst fetchFromCompany = _ref => {\n  let {\n    token,\n    endpoint,\n    params\n  } = _ref;\n  let url = [COMPANY_ROOT, endpoint].join('/');\n\n  if (params) {\n    const paramString = toPairs(params).map(param => param.join('=')).join('&');\n    url += `?${paramString}`;\n  }\n\n  const options = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  console.log(\"API>>>\", url);\n  return request(url, options);\n};\n\nexport default fetchFromCompany;","map":{"version":3,"names":["toPairs","COMPANY_ROOT","parseJSON","response","status","json","checkStatus","error","Error","statusText","request","url","options","console","log","fetch","then","fetchFromCompany","token","endpoint","params","join","paramString","map","param","headers","Authorization"],"sources":["/Users/rickyboard/Desktop/Fasttrack/group-final-sprint-8/client/src/services/api.js"],"sourcesContent":["import toPairs from 'lodash/toPairs'\nconst COMPANY_ROOT = 'https://localhost:8080'\n\nconst parseJSON = response => {\n    if (response.status === 204 || response.status === 205) {\n      return null\n    }\n    return response.json()\n  }\n\nconst checkStatus = response => {\n    if (response.status >= 200 && response.status < 300) {\n      return response\n    }\n    const error = new Error(response.statusText)\n    error.response = response\n    throw error\n  }\n\nexport const request = (url, options) => {\n  console.log(\"request\", url)\n    return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON)\n  }\n\nconst fetchFromCompany = ({ token, endpoint, params }) => {\n    let url = [COMPANY_ROOT, endpoint].join('/')\n    if (params) {\n      const paramString = toPairs(params)\n        .map(param => param.join('='))\n        .join('&')\n      url += `?${paramString}`\n    }\n    const options = { headers: { Authorization: `Bearer ${token}` } }\n    console.log(\"API>>>\",url)\n    return request(url, options)\n  }\n  \n  export default fetchFromCompany"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,MAAMC,YAAY,GAAG,wBAArB;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,IAAI;EAC1B,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;IACtD,OAAO,IAAP;EACD;;EACD,OAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,CALH;;AAOA,MAAMC,WAAW,GAAGH,QAAQ,IAAI;EAC5B,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;IACnD,OAAOD,QAAP;EACD;;EACD,MAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,UAAnB,CAAd;EACAF,KAAK,CAACJ,QAAN,GAAiBA,QAAjB;EACA,MAAMI,KAAN;AACD,CAPH;;AASA,OAAO,MAAMG,OAAO,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;EACvCC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAvB;EACE,OAAOI,KAAK,CAACJ,GAAD,EAAMC,OAAN,CAAL,CACNI,IADM,CACDV,WADC,EAENU,IAFM,CAEDd,SAFC,CAAP;AAGD,CALI;;AAOP,MAAMe,gBAAgB,GAAG,QAAiC;EAAA,IAAhC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAgC;EACtD,IAAIT,GAAG,GAAG,CAACV,YAAD,EAAekB,QAAf,EAAyBE,IAAzB,CAA8B,GAA9B,CAAV;;EACA,IAAID,MAAJ,EAAY;IACV,MAAME,WAAW,GAAGtB,OAAO,CAACoB,MAAD,CAAP,CACjBG,GADiB,CACbC,KAAK,IAAIA,KAAK,CAACH,IAAN,CAAW,GAAX,CADI,EAEjBA,IAFiB,CAEZ,GAFY,CAApB;IAGAV,GAAG,IAAK,IAAGW,WAAY,EAAvB;EACD;;EACD,MAAMV,OAAO,GAAG;IAAEa,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASR,KAAM;IAAjC;EAAX,CAAhB;EACAL,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBH,GAArB;EACA,OAAOD,OAAO,CAACC,GAAD,EAAMC,OAAN,CAAd;AACD,CAXH;;AAaE,eAAeK,gBAAf"},"metadata":{},"sourceType":"module"}